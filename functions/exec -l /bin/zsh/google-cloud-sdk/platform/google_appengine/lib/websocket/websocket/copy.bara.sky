"""websocket upgrade config.

Generated by go/python-puppy."""

# To upgrade to the latest version of websocket, run go/copybara:
#     copybara third_party/py/websocket/copy.bara.sky
# To explicitly upgrade to a specific version, run:
#     copybara --nogit-origin-version-selector \
#         third_party/py/websocket/copy.bara.sky default <branch_name>|<git_tag>|<git_hash>
load("//devtools/python/janitor/puppy/puppy", "MAJOR_MINOR_PATCH", "git_to_third_party_py")

git_origin_url = "https://github.com/websocket-client/websocket-client"

python_package_name = "websocket"

version_selector = MAJOR_MINOR_PATCH

patching_enabled = True

git_exclude = [
    # exclude all dotfiles
    ".*",
    "**/.*",
    ".*/**",

    # exclude python packaging and non-google3 build system files
    "MANIFEST*",
    "appveyor.yml",
    "circle.yml",
    "codecov*.yml",
    "setup.cfg",
    "setup.py",
    "Makefile*",
    "**/Makefile*",
    "GNUmakefile",
    "meson.build",
    "**/meson.build",
    "appveyor/**",
    "debian*/**",
    "tox.ini",
    "pytest.ini",
    "mypy.ini",
    "*.toml",
    "poetry.lock",
    "*requirements*.txt",
    "azure-pipelines.yml",
    "environment.yml",
    "WORKSPACE",
    "BUILD.bazel",
    "**/BUILD.bazel",
    "Dockerfile",
    "*.spec",  # Fedora RPM spec files
    "Pipfile",
    "**/__pycache__/**",
    "**/*.pyc",

    # exclude package documentation
    "doc/**",
    "docs/**",
    "README*",
    "AUTHOR*",
    "RELEAS*",
    "CONTRIB*",
    "CODE_OF_CONDUCT*",
    "code-of-conduct*",
    "TODO",
    "example*/**",
    "readthedocs.yml",
    "*_TEMPLATE.md",
]

google3_exclude = [
    "BUILD",
    "**/BUILD",
    "METADATA",
    "OWNERS",
    "OWNERS_METADATA",
    "patches/**",
    "copy.bara.sky",
    "g3doc/**",
    "README.md",
    "**.blueprint",
    "bluze.textproto",
    "puppy_auto.patch",

    # These files were detected by autopatch as being added to the piper version:
    "setup.py",
    "badhost.key",
    "localhost.crt",
    "localhost.key",
    "create_cert.sh",
    "websocket_test.py",
    "README.rst",
    "badhost.crt",
]

transformations = [
    core.move("websocket", ""),
]

git_to_third_party_py(
    git_origin_url = git_origin_url,
    python_package_name = python_package_name,
    git_files = glob(
        include = ["**"],
        exclude = git_exclude,
    ),
    google3_exclude = google3_exclude,
    transformations = transformations,
    patching_enabled = patching_enabled,
    version_selector = version_selector,
    git_ref = "master",
)
